---
import type { CollectionEntry } from 'astro:content'
import BlogCard from './BlogCard.astro'

interface Props {
    blogs: CollectionEntry<'posts'>[]
}

const { blogs } = Astro.props
---

<section class="py-14 lg:py-24">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <!-- Grid de posts con data-tags para filtrado -->
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
            {blogs.map((blog) => (
                <div 
                    class="blog-card-wrapper"
                    data-tags={blog.data.tags?.join(',') || ''}
                >
                    <BlogCard blog={blog} />
                </div>
            ))}
        </div>

        <!-- Mensaje cuando no hay resultados -->
        <div id="no-results" class="hidden text-center py-12">
            <div class="max-w-md mx-auto">
                <div class="text-6xl mb-4">üîç</div>
                <h3 class="text-xl font-bold text-gray-700 dark:text-gray-300 mb-2">
                    No se encontraron posts
                </h3>
                <p class="text-gray-600 dark:text-gray-400">
                    Intenta con otros hashtags o limpia los filtros
                </p>
            </div>
        </div>
    </div>
</section>

<style>
.blog-card-wrapper {
    transition: all 0.3s ease;
}

.blog-card-wrapper[style*="display: none"] {
    display: none !important;
}
</style>

<script>
// Script para mostrar/ocultar mensaje de "no hay resultados"
document.addEventListener('DOMContentLoaded', function() {
    const observer = new MutationObserver(function() {
        const visibleCards = document.querySelectorAll('.blog-card-wrapper:not([style*="display: none"])');
        const noResultsMessage = document.getElementById('no-results');
        
        if (visibleCards.length === 0) {
            noResultsMessage?.classList.remove('hidden');
        } else {
            noResultsMessage?.classList.add('hidden');
        }
    });

    // Observar cambios en los wrappers de las cards
    document.querySelectorAll('.blog-card-wrapper').forEach(wrapper => {
        observer.observe(wrapper, { attributes: true, attributeFilter: ['style'] });
    });
});
</script>
